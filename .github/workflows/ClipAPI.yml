name: Build and deploy .NET Core application to Web App ClipAPI
on:
  push:
    branches:
    - main
env:
  AZURE_WEBAPP_NAME: ClipAPI
  AZURE_WEBAPP_PACKAGE_PATH: ./publish
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 6.0.x
  WORKING_DIRECTORY: ./ClipAPI
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
  
    # Install Python 3.8
    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

     # Set PYTHONNET_PYDLL environment variable
    - name: Set PYTHONNET_PYDLL environment variable
      run: echo "PYTHONNET_PYDLL=/opt/hostedtoolcache/Python/3.8.18/x64/lib/libpython3.8.so" >> $GITHUB_ENV   

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    #- name: Test
      #run: dotnet test "${{ env.WORKING_DIRECTORY }}" --no-build
    
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}/ClipAPI.csproj" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/ClipAPI"
    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.ClipAPI_3B39 }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/ClipAPI
